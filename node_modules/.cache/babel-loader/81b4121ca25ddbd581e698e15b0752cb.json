{"ast":null,"code":"import _slicedToArray from\"C:/Users/khm38/github-classroom/2024OSS/5-assignment-4-2-react-practice-hyeokkiyaa/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Table=function Table(_ref){var employees=_ref.employees,handleEdit=_ref.handleEdit,handleDelete=_ref.handleDelete;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchQuery=_useState4[0],setSearchQuery=_useState4[1];var _useState5=useState('table'),_useState6=_slicedToArray(_useState5,2),viewMode=_useState6[0],setViewMode=_useState6[1];// 'table' or 'card'\nvar pageSize=8;var formatter=new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:null});// Calculate the slice of employees to display based on current page and page size\nvar startIndex=(currentPage-1)*pageSize;var endIndex=startIndex+pageSize;// Filter employees based on the search query\nvar filteredEmployees=employees.filter(function(employee){return\"\".concat(employee.firstName,\" \").concat(employee.lastName).toLowerCase().includes(searchQuery.toLowerCase());});var visibleEmployees=filteredEmployees.slice(startIndex,endIndex);var totalPages=Math.ceil(filteredEmployees.length/pageSize);var handleNextPage=function handleNextPage(){if(currentPage<totalPages){setCurrentPage(currentPage+1);}};var handlePrevPage=function handlePrevPage(){if(currentPage>1){setCurrentPage(currentPage-1);}};var handleSearchChange=function handleSearchChange(e){setSearchQuery(e.target.value);setCurrentPage(1);// Reset to the first page when searching\n};var toggleViewMode=function toggleViewMode(){setViewMode(viewMode==='table'?'card':'table');};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"view-toggle right-content\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:toggleViewMode,children:[\"Switch to \",viewMode==='table'?'Card View':'Table View']})}),/*#__PURE__*/_jsx(\"input\",{className:\"left-content\",type:\"text\",placeholder:\"Search by name\",value:searchQuery,onChange:handleSearchChange}),viewMode==='table'?/*#__PURE__*/_jsxs(\"table\",{className:\"striped-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"No.\"}),/*#__PURE__*/_jsx(\"th\",{children:\"First Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Salary\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{colSpan:2,className:\"text-center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:visibleEmployees.length>0?visibleEmployees.map(function(employee,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:startIndex+i+1}),/*#__PURE__*/_jsx(\"td\",{children:employee.firstName}),/*#__PURE__*/_jsx(\"td\",{children:employee.lastName}),/*#__PURE__*/_jsx(\"td\",{children:employee.email}),/*#__PURE__*/_jsx(\"td\",{children:formatter.format(employee.salary)}),/*#__PURE__*/_jsxs(\"td\",{children:[employee.date,\" \"]}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleEdit(employee.id);},className:\"button muted-button\",children:\"Edit\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"text-left\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleDelete(employee.id);},className:\"button muted-button\",children:\"Delete\"})})]},employee.id);}):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:7,children:\"No Employees\"})})})]}):/*#__PURE__*/ // Card view rendering goes here\n// You can create a Card component to display employee details in card format\n// and map through visibleEmployees to render each card\n_jsx(\"div\",{className:\"card-grid\",children:visibleEmployees.length>0?visibleEmployees.map(function(employee,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\".concat(employee.firstName,\" \").concat(employee.lastName)}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",employee.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Salary: \",formatter.format(employee.salary)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date: \",employee.date]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleEdit(employee.id);},className:\"button muted-button\",children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleDelete(employee.id);},className:\"button muted-button\",children:\"Delete\"})]})]},employee.id);}):/*#__PURE__*/_jsx(\"div\",{children:\"No Employees\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevPage,disabled:currentPage===1,children:\"Previous Page\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Page \",currentPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextPage,disabled:currentPage===totalPages,children:\"Next Page\"})]})]});};export default Table;","map":{"version":3,"names":["React","useState","Table","employees","handleEdit","handleDelete","currentPage","setCurrentPage","searchQuery","setSearchQuery","viewMode","setViewMode","pageSize","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","startIndex","endIndex","filteredEmployees","filter","employee","firstName","lastName","toLowerCase","includes","visibleEmployees","slice","totalPages","Math","ceil","length","handleNextPage","handlePrevPage","handleSearchChange","e","target","value","toggleViewMode","map","i","email","format","salary","date","id"],"sources":["C:/Users/khm38/github-classroom/2024OSS/5-assignment-4-2-react-practice-hyeokkiyaa/src/components/Dashboard/Table.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Table = ({ employees, handleEdit, handleDelete }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [viewMode, setViewMode] = useState('table'); // 'table' or 'card'\r\n  const pageSize = 8;\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: null,\r\n  });\r\n\r\n  // Calculate the slice of employees to display based on current page and page size\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n  const endIndex = startIndex + pageSize;\r\n\r\n  // Filter employees based on the search query\r\n  const filteredEmployees = employees.filter((employee) =>\r\n    `${employee.firstName} ${employee.lastName}`.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const visibleEmployees = filteredEmployees.slice(startIndex, endIndex);\r\n\r\n  const totalPages = Math.ceil(filteredEmployees.length / pageSize);\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n    setCurrentPage(1); // Reset to the first page when searching\r\n  };\r\n\r\n  const toggleViewMode = () => {\r\n    setViewMode(viewMode === 'table' ? 'card' : 'table');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Add a toggle button to switch between table and card view */}\r\n      <div className=\"view-toggle right-content\">\r\n        <button onClick={toggleViewMode}>\r\n          Switch to {viewMode === 'table' ? 'Card View' : 'Table View'}\r\n        </button>\r\n      </div>\r\n\r\n      <input\r\n        className=\"left-content\"\r\n        type=\"text\"\r\n        placeholder=\"Search by name\"\r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n      />\r\n\r\n      {viewMode === 'table' ? (\r\n        <table className=\"striped-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Salary</th>\r\n              <th>Date</th>\r\n              <th colSpan={2} className=\"text-center\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {visibleEmployees.length > 0 ? (\r\n              visibleEmployees.map((employee, i) => (\r\n                <tr key={employee.id}>\r\n                  <td>{startIndex + i + 1}</td>\r\n                  <td>{employee.firstName}</td>\r\n                  <td>{employee.lastName}</td>\r\n                  <td>{employee.email}</td>\r\n                  <td>{formatter.format(employee.salary)}</td>\r\n                  <td>{employee.date} </td>\r\n                  <td className=\"text-right\">\r\n                    <button\r\n                      onClick={() => handleEdit(employee.id)}\r\n                      className=\"button muted-button\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </td>\r\n                  <td className=\"text-left\">\r\n                    <button\r\n                      onClick={() => handleDelete(employee.id)}\r\n                      className=\"button muted-button\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={7}>No Employees</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        // Card view rendering goes here\r\n        // You can create a Card component to display employee details in card format\r\n        // and map through visibleEmployees to render each card\r\n        <div className=\"card-grid\">\r\n          {visibleEmployees.length > 0 ? (\r\n            visibleEmployees.map((employee, i) => (\r\n              <div key={employee.id} className=\"card\">\r\n                {/* Card content */}\r\n                <h3>{`${employee.firstName} ${employee.lastName}`}</h3>\r\n                <p>Email: {employee.email}</p>\r\n                <p>Salary: {formatter.format(employee.salary)}</p>\r\n                <p>Date: {employee.date}</p>\r\n                <div className=\"card-actions\">\r\n                  <button\r\n                    onClick={() => handleEdit(employee.id)}\r\n                    className=\"button muted-button\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(employee.id)}\r\n                    className=\"button muted-button\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>No Employees</div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Pagination controls */}\r\n      <div className=\"pagination\">\r\n        <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n          Previous Page\r\n        </button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button onClick={handleNextPage} disabled={currentPage === totalPages}>\r\n          Next Page\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}